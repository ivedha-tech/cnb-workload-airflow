steps:
  # Get the latest version number and authors from commits
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Get Latest Version and Authors"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        if [[ "$BRANCH_NAME" == "feature/cws-7-configure-fix" ]]; then
          # Get the latest version number from the registry
          echo "=== DEBUG: Running gcloud command ==="
          echo "Command: gcloud artifacts docker images list us-docker.pkg.dev/prj-prd-cnb-workload/ar-workload-airflow-nonprod --include-tags --format=\"get(tags)\""
          
          ALL_TAGS=$$(gcloud artifacts docker images list us-docker.pkg.dev/prj-prd-cnb-workload/ar-workload-airflow-nonprod --include-tags --format="get(tags)")
          
          echo "=== DEBUG: gcloud command exit code ==="
          echo "Exit code: $$?"
          
          echo "=== DEBUG: All tags from registry ==="
          echo "ALL_TAGS variable content: '$$ALL_TAGS'"
          echo "ALL_TAGS length: $$(echo "$$ALL_TAGS" | wc -c)"
          echo "=== END DEBUG: All tags ==="
          
          # Try alternative approach to list images
          echo "=== DEBUG: Alternative gcloud command (no format) ==="
          gcloud artifacts docker images list us-docker.pkg.dev/prj-prd-cnb-workload/ar-workload-airflow-nonprod --include-tags
          echo "=== END DEBUG: Alternative command ==="
          
          REGISTRY_VERSION=$$(echo "$$ALL_TAGS" | grep '3\.0\.2-cnb-v[0-9]*' | head -1)
          
          echo "=== DEBUG: Found matching version ==="
          echo "REGISTRY_VERSION: $$REGISTRY_VERSION"
          echo "=== END DEBUG: Found matching version ==="
          
          if [[ -z "$$REGISTRY_VERSION" ]]; then
            NEW_VERSION="3.0.2-cnb-v1"
            echo "=== DEBUG: No matching version found, using v1 ==="
          else
            VERSION_NUM=$$(echo "$$REGISTRY_VERSION" | grep -o '[0-9]*$$')
            echo "=== DEBUG: Version extraction ==="
            echo "REGISTRY_VERSION: $$REGISTRY_VERSION"
            echo "VERSION_NUM: $$VERSION_NUM"
            echo "=== END DEBUG: Version extraction ==="
            NEW_VERSION_NUM=$$((VERSION_NUM + 1))
            NEW_VERSION="3.0.2-cnb-v$$NEW_VERSION_NUM"
            echo "=== DEBUG: New version calculation ==="
            echo "NEW_VERSION_NUM: $$NEW_VERSION_NUM"
            echo "NEW_VERSION: $$NEW_VERSION"
            echo "=== END DEBUG: New version calculation ==="
          fi
        else
          NEW_VERSION="$SHORT_SHA"
        fi
        
        # Get unique authors from recent commits (last 50 commits)
        AUTHORS=$$(git log --pretty=format:"%an <%ae>" -50 | sort -u | tr '\n' ',' | sed 's/,$$//')
        
        # If no authors found, use default
        if [[ -z "$$AUTHORS" ]]; then
          AUTHORS="dev@ivedha.com"
        fi
        
        # Write to a temporary file for next steps
        echo "$$NEW_VERSION" > /workspace/version.txt
        echo "$$AUTHORS" > /workspace/authors.txt

  # Build the Docker image with proper tagging and custom labels
  - name: "gcr.io/cloud-builders/docker"
    id: "Build Docker Image"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Read the version and authors from temporary files
        NEW_VERSION=$$(cat /workspace/version.txt)
        AUTHORS=$$(cat /workspace/authors.txt)
        
        # Fallback if variables are empty
        if [[ -z "$$NEW_VERSION" ]]; then
          NEW_VERSION="$SHORT_SHA"
        fi
        
        if [[ -z "$$AUTHORS" ]]; then
          AUTHORS="dev@ivedha.com"
        fi
        
        # Enable BuildKit for heredoc syntax support
        export DOCKER_BUILDKIT=1
        
        docker build \
          --build-arg AIRFLOW_VERSION=3.0.2 \
          --build-arg AIRFLOW_EXTRAS=aiobotocore,amazon,async,celery,cncf-kubernetes,common-io,common-messaging,docker,elasticsearch,fab,ftp,git,google,google-auth,graphviz,grpc,hashicorp,http,ldap,microsoft-azure,mysql,odbc,openlineage,pandas,postgres,redis,sendgrid,sftp,slack,snowflake,ssh,statsd,uv \
          --build-arg AIRFLOW_IMAGE_TYPE=prod \
          --build-arg AIRFLOW_UID=50000 \
          --build-arg BUILD_ID=$BUILD_ID \
          --build-arg COMMIT_SHA=$COMMIT_SHA \
          --label "com.ivedha.image.source=https://github.com/ivedha-tech/cnb-workload-airflow" \
          --label "com.ivedha.image.created=$$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          --label "com.ivedha.image.authors=$$AUTHORS" \
          --label "com.ivedha.image.url=us-docker.pkg.dev/prj-prd-cnb-workload/ar-workload-airflow-nonprod/airflow" \
          --label "com.ivedha.image.version=$$NEW_VERSION" \
          --label "com.ivedha.image.revision=$COMMIT_SHA" \
          --label "com.ivedha.image.vendor=Ivedha Inc" \
          --label "com.ivedha.image.title=CNB Workload Airflow Image" \
          --label "com.ivedha.image.description=Custom Apache Airflow image for CNB workload management" \
          --label "com.ivedha.image.ref.name=airflow" \
          --label "com.ivedha.main-image.build-id=$BUILD_ID" \
          --label "com.ivedha.main-image.commit-sha=$COMMIT_SHA" \
          --label "com.ivedha.branch=$BRANCH_NAME" \
          --label "com.ivedha.build-timestamp=$$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          -t "us-docker.pkg.dev/prj-prd-cnb-workload/ar-workload-airflow-nonprod/airflow:$$NEW_VERSION" \
          .

  # Push the Docker image to the registry
  - name: "gcr.io/cloud-builders/docker"
    id: "Push Docker Image"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        NEW_VERSION=$$(cat /workspace/version.txt)
        docker push "us-docker.pkg.dev/prj-prd-cnb-workload/ar-workload-airflow-nonprod/airflow:$$NEW_VERSION"
        
# Set timeout for the build (in seconds)
timeout: "3600s"

# Configure build options
options:
  # Enable Docker layer caching to speed up builds
  machineType: "E2_HIGHCPU_8"
  # Use a larger disk size for the build
  diskSizeGb: "100"
  # Enable logging
  logging: CLOUD_LOGGING_ONLY 